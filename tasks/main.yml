---
# tasks file for cdougan-sssd/add_groups
   - name: Ensure directory for facts exists
     file:
       state: directory
       path: /etc/ansible/facts.d

#   - name: create fact file from template
#     template:
#       src: groups-ansible_facts.j2
#       dest: "/etc/ansible/facts.d/adgroups-{{ admin_group_type }}.fact"

#   - name: Create sudo rules for groups
#     template:
#       src: sudorules.j2
#       #dest: "/etc/sudoers/sudoers.d/{{ admin_group_type }}"
#       dest: "/tmp/{{ admin_group_type }}"

 #  - name: Regather facts to pick up new one
 #    setup:

#   - name: Search local facts for any prefixed with adgroups - these contain lists of the users to configure sssd to allow access to
#     set_fact:
#      local_facts_containing_ad_groups: "{{ ansible_local | select('match', '^adgroups') | list|default([])}}"

   - name: Look up domain in ad_realms dictionary, and return the realm that is associated with this
     set_fact:
       ad_realm: "{% for i in ad_realms %}{% if i.domain == domain %}{{ i.realm }}{% endif %}{% endfor %}"

#   - name: Concatenate all the lists of AD users into one big list, comma separated as thats the format sssd.conf expects
#     set_fact:
#       all_ad_groups: "{% set output=[] %}{% for fact_name in (local_facts_containing_ad_groups|default([])) %}{% for group in ansible_local[fact_name] %}{{ output.append(group) }}{% endfor %}{% endfor %}{{ output|join(',')}}"

   - name: Confirm realm has been set - if it hasnt then the server probably has a domain that we didnt expect
     assert:
      that: 'ad_realm != ""'

   - name: Ensure shared homedir exists
     file:
       path: "{{ shared_ad_homedir }}"
       state: directory
       owner: nobody
       group: nobody
       mode: 0755

   - name: Ensure files from /etc/skel are copied out to the shared homedir
     copy:
       remote_src: true
       src: "/etc/skel/{{ item }}"
       dest: "{{ shared_ad_homedir }}/{{ item }}"
       owner: nobody
       group: nobody
       mode: 0644
     with_items:
      - .bash_logout
      - .bash_profile
      - .bashrc

   - name: Install common packages required for SSSD to work
     yum:
       name: "{{ yum_packages }}"
       state: installed
     notify:
      - restart_sssd

   - name: Install Realmd on RHEL7 servers
     yum:
       name: realmd
       state: installed
     when: ansible_distribution_major_version == '7'
     notify:
      - restart_sssd

   - name: Create symlinks to auth files - this ensures we use the correct ones and not some pre-existing custom config
     file:
       src: "/etc/pam.d/{{ item }}-auth-ac"
       path: "/etc/pam.d/{{ item }}-auth"
       state: link
       force: yes
     with_items:
      - password
      - system
     notify:
      - restart_sssd

   - name: Check if keytab file already exists
     stat:
       path: /etc/krb5.keytab
     register: keytab_register

   - block:
      - name: Check if hostname is in keytab
        shell: "grep -i {{ ansible_hostname }} /etc/krb5.keytab"
        failed_when: false
        register: keytab_grep
        changed_when: false

      - block:
        - name: Check if server is already joined to domain
          shell: "realm list|grep -i {{ ad_realm|lower }}"
          failed_when: false
          register: realm_list_grep
          changed_when: false

        - name: Leave Domain if hostname not in keytab and joined to domain
          shell: realm leave
          when: keytab_grep.rc != 0 or realm_list_grep.rc != 0
        when: ansible_distribution_major_version == '7'

      - name: Remove keytab if hostname not in it
        file:
          path: /etc/krb5.keytab
          state: absent
        when: keytab_grep.rc != 0
     when: keytab_register.stat.exists == true

   # Added realm join workaround --membership-software flag for samba bug. See https://access.redhat.com/solutions/4358871
   - name: Try running realm command with hereDOC
     shell:
       cmd: |
         realm join --user {{ ad_user }} {{ ad_server }} {% if ad_ou != '' %}--computer-ou "{{ ad_ou }}" {% endif %}--membership-software=adcli <<EOF
         {{ ad_password }}
         EOF
     notify:
      - restart_sssd
     when: 
       - (keytab_register.stat.exists != true) or (keytab_grep.rc != 0 or realm_list_grep.rc != 0)
       - ansible_distribution_major_version == '7'

   - name: Configure SSSD
     template:
       src: sssd.conf.j2
       dest: "/etc/sssd/sssd.conf"
       owner: root
       group: root
       mode: 0600
     notify:
      - restart_sssd

   - name: Place krb5 conf file
     template:
       src: krb5.conf.j2
       dest: /etc/krb5.conf
       owner: root
       group: root
       mode: 0644
     notify:
      - restart_sssd
